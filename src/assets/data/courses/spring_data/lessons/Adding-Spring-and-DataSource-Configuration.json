{"courseCode":"spring_data","courseName":"Data access in Spring","description":"We'll now add the Spring framework to our JDBC project. We'll add dependency injection to our Main and DAO class. We'll also learn how to configure DataSource as a Spring bean and supply connection parameters to it in the XML file.","permalinkName":"Adding-Spring-and-DataSource-Configuration","title":"Adding Spring and DataSource Configuration","unitSlNo":"2.1","youtube":"f-k823MZ02Q","duration":898,"slNo":1,"prev":"/courses/spring_data/lessons/Using-JDBC-without-Spring","next":"/courses/spring_data/lessons/Using-JdbcTemplate","type":"video","durationText":"14 minutes","topic":"spring","unit":{"lessons":[{"title":"Adding Spring and DataSource Configuration","description":"We'll now add the Spring framework to our JDBC project. We'll add dependency injection to our Main and DAO class. We'll also learn how to configure DataSource as a Spring bean and supply connection parameters to it in the XML file.","permalinkName":"Adding-Spring-and-DataSource-Configuration","type":"video","slNo":1,"durationText":"14 minutes"},{"title":"Using JdbcTemplate","description":"We'll use the JdbcTemplate class provided by Spring to implement a DAO method. We'll see how using the template class makes the DAO methods simple, and how it takes care of much of the boilerplate code we'd have to write otherwise.","permalinkName":"Using-JdbcTemplate","type":"video","slNo":2,"durationText":"17 minutes"},{"title":"Returning Other Datatypes from JdbcTemplate","description":"We returned an integer datatype result from our query in the previous tutorial. In this tutorial, we'll learn how to return other datatypes. We'll implement a method that returns a String query output.","permalinkName":"Returning-Other-Datatypes-from-JdbcTemplate","type":"video","slNo":3,"durationText":"12 minutes"},{"title":"Implementing RowMapper","description":"In this tutorial, we implement a custom RowMapper class to map our domain objects. We then use this class to write fetch methods that return custom model objects.","permalinkName":"Implementing-RowMapper","type":"video","slNo":4,"durationText":"13 minutes"},{"title":"Performing Write Operations with JdbcTemplate","description":"We'll now implement some database write operations. We'll write a DAO method to update a value in the database, as well as use the execute() method to run a DDL SQL query.","permalinkName":"Performing-Write-Operations-with-JdbcTemplate","type":"video","slNo":5,"durationText":"11 minutes"},{"title":"Named Parameter JDBC Template","description":"We'll use the NamedParameterJdbcTemplate class to run queries with named placeholders.","permalinkName":"Named-Parameter-JDBC-Template","type":"video","slNo":6,"durationText":"15 minutes"},{"title":"DAO Support Classes","description":"We'll wrap up discussion on the Spring JDBC support by using the DAO support classes that Spring provides out of the box. We'll see how this makes our DAO classes cleaner than ever.","permalinkName":"DAO-Support-Classes","type":"video","slNo":7,"durationText":"14 minutes"},{"title":"Using Hibernate with Spring","description":"In this video, we'll learn how to integrate the Hibernate framework in our Spring application. We'll create a SessionFactory as a Spring singleton and use that in our DAO class to work with the database.","permalinkName":"Using-Hibernate-with-Spring","type":"video","slNo":8,"durationText":"22 minutes"}]}}